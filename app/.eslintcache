[{"/Users/ahmadwalisayadi/lambdaSchool/web-applications-II/advanced state/React-Redux-App/app/src/index.js":"1","/Users/ahmadwalisayadi/lambdaSchool/web-applications-II/advanced state/React-Redux-App/app/src/reportWebVitals.js":"2","/Users/ahmadwalisayadi/lambdaSchool/web-applications-II/advanced state/React-Redux-App/app/src/App.js":"3","/Users/ahmadwalisayadi/lambdaSchool/web-applications-II/advanced state/React-Redux-App/app/src/components/CuteDogs.js":"4","/Users/ahmadwalisayadi/lambdaSchool/web-applications-II/advanced state/React-Redux-App/app/src/actions/index.js":"5","/Users/ahmadwalisayadi/lambdaSchool/web-applications-II/advanced state/React-Redux-App/app/src/reducers/index.js":"6"},{"size":442,"mtime":1611351892604,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1611315456748,"results":"9","hashOfConfig":"8"},{"size":345,"mtime":1611315760965,"results":"10","hashOfConfig":"8"},{"size":2277,"mtime":1611315831875,"results":"11","hashOfConfig":"8"},{"size":655,"mtime":1611315723816,"results":"12","hashOfConfig":"8"},{"size":710,"mtime":1611315902269,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"888aiq",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ahmadwalisayadi/lambdaSchool/web-applications-II/advanced state/React-Redux-App/app/src/index.js",[],"/Users/ahmadwalisayadi/lambdaSchool/web-applications-II/advanced state/React-Redux-App/app/src/reportWebVitals.js",[],["28","29"],"/Users/ahmadwalisayadi/lambdaSchool/web-applications-II/advanced state/React-Redux-App/app/src/App.js",[],"/Users/ahmadwalisayadi/lambdaSchool/web-applications-II/advanced state/React-Redux-App/app/src/components/CuteDogs.js",["30","31","32","33","34"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDog } from \"../actions\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\n// import tileData from './tileData';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 1000,\n    height: 700,\n  },\n}));\n\nconst CuteDogs = ({ getDog, isFetching, dogImg, error, props }) => {\n  const classes = useStyles();\n  if (isFetching) {\n    return <h2>Fetching a Dog Image now üêï </h2>;\n  } else {\n    return (\n      <div>\n        <div style={{ backgroundColor: \"#43e0d9\" }} className={classes.root}>\n          <Card style={{ backgroundColor: \"#409cff\" }}>\n            <GridList cellHeight={160} className={classes.gridList} cols={3}>\n              {dogImg.map((dog, index) => (\n                <GridListTile>\n                  <img src={dog} key={index} />\n                </GridListTile>\n              ))}\n            </GridList>\n            <Button variant=\"contained\" color=\"secondary\" onClick={getDog}>\n              Get Dog album\n            </Button>\n          </Card>\n        </div>\n\n        <div>\n          {/* <Card style={{ backgroundColor: \"#409cff\" }} >\n            <CardMedia >\n              <img style={{ borderRadius: \"10px\" }} width=\"500\" src={dogImg} />\n            </CardMedia>\n            <Button variant=\"contained\" color=\"secondary\" onClick={getDog}>\n              Get Dog album\n            </Button>\n          </Card> */}\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    dogImg: state.dogImg,\n    isFetching: state.isFetching,\n    error: state.error,\n  };\n};\n\nexport default connect(mapStateToProps, { getDog })(CuteDogs);","/Users/ahmadwalisayadi/lambdaSchool/web-applications-II/advanced state/React-Redux-App/app/src/actions/index.js",[],"/Users/ahmadwalisayadi/lambdaSchool/web-applications-II/advanced state/React-Redux-App/app/src/reducers/index.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":6,"column":8,"nodeType":"41","messageId":"42","endLine":6,"endColumn":22},{"ruleId":"39","severity":1,"message":"43","line":7,"column":8,"nodeType":"41","messageId":"42","endLine":7,"endColumn":19},{"ruleId":"39","severity":1,"message":"44","line":8,"column":8,"nodeType":"41","messageId":"42","endLine":8,"endColumn":19},{"ruleId":"39","severity":1,"message":"45","line":9,"column":8,"nodeType":"41","messageId":"42","endLine":9,"endColumn":17},{"ruleId":"46","severity":1,"message":"47","line":42,"column":19,"nodeType":"48","endLine":42,"endColumn":48},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'CardActionArea' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]